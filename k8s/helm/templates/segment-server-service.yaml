apiVersion: v1
kind: Service
metadata:
  name: segment-server
  namespace: chroma
spec:
  ports:
    - name: segment-server-port
      port: 50051
      targetPort: 50051
  selector:
    app: segment-server
  type: ClusterIP

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: segment-server
  namespace: chroma
spec:
  replicas: 1
  selector:
    matchLabels:
      app: segment-server
  template:
    metadata:
      labels:
        app: segment-server
    spec:
      containers:
        - name: segment-server
          image: "{{ .Values.imageUrl }}"
          imagePullPolicy: IfNotPresent
          command: ["python", "-m", "chromadb.segment.impl.distributed.server"]
          ports:
            - containerPort: 50051
          volumeMounts:
            - name: chroma
              mountPath: /index_data
          env:
            - name: IS_PERSISTENT
              value: "TRUE"
            - name: CHROMA_PRODUCER_IMPL
              value: "chromadb.ingest.impl.pulsar.PulsarProducer"
            - name: CHROMA_CONSUMER_IMPL
              value: "chromadb.ingest.impl.pulsar.PulsarConsumer"
            - name: PULSAR_BROKER_URL
              value: "pulsar.chroma"
            - name: PULSAR_BROKER_PORT
              value: "6650"
            - name: PULSAR_ADMIN_PORT
              value: "8080"
            - name: chroma_server_grpc_port
              value: "50051"
          # readinessProbe:
          #   httpGet:
          #     path: /healthz
          #     port: 50051
          #   initialDelaySeconds: 10
          #   periodSeconds: 5
          # livenessProbe:
          #   httpGet:
          #     path: /healthz
          #     port: 50051
          #   initialDelaySeconds: 20
          #   periodSeconds: 10
      volumes:
        - name: chroma
          emptyDir: {}
